// <auto-generated />
using System;
using Api.Locadora.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Api.Locadora.Migrations
{
    [DbContext(typeof(LocadoraContext))]
    [Migration("20190521143502_HistoricoVersao")]
    partial class HistoricoVersao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Api.Locadora.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<int>("Diaria");

                    b.Property<string>("Modelo");

                    b.Property<int>("Velocidade");

                    b.Property<int>("Versao");

                    b.HasKey("Id");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("Api.Locadora.Models.CarroHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<int>("CarroId");

                    b.Property<DateTimeOffset>("DHModificacao");

                    b.Property<int>("Diaria");

                    b.Property<string>("Modelo");

                    b.Property<int>("Velocidade");

                    b.Property<int>("Versao");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.ToTable("CarroHistorico");
                });

            modelBuilder.Entity("Api.Locadora.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<string>("Perfil");

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.Property<int>("Versao");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Api.Locadora.Models.ClienteHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<DateTimeOffset>("DHModificacao");

                    b.Property<string>("Nome");

                    b.Property<string>("Perfil");

                    b.Property<int>("Tipo");

                    b.Property<int>("Versao");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ClienteHistorico");
                });

            modelBuilder.Entity("Api.Locadora.Models.Locacoes", b =>
                {
                    b.Property<int>("ClienteId");

                    b.Property<int>("CarroId");

                    b.HasKey("ClienteId", "CarroId");

                    b.HasIndex("CarroId");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("Api.Locadora.Models.CarroHistorico", b =>
                {
                    b.HasOne("Api.Locadora.Models.Carro", "Carro")
                        .WithMany("Historicos")
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Api.Locadora.Models.ClienteHistorico", b =>
                {
                    b.HasOne("Api.Locadora.Models.Cliente", "Cliente")
                        .WithMany("Historicos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Api.Locadora.Models.Locacoes", b =>
                {
                    b.HasOne("Api.Locadora.Models.Carro", "Carro")
                        .WithMany("Locacoes")
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Locadora.Models.Cliente", "Cliente")
                        .WithMany("Locados")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
